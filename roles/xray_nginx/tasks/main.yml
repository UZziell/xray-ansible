---
- name: Configure nginx for xray
  ansible.builtin.import_tasks: nginx-uds.yml

- name: Install/upgrade xray via official script
  become: true
  ansible.builtin.shell: bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
  register: xray_install_output

- debug:
    msg: "{{ xray_install_output.stdout_lines }}"

- name: Get latest iran-hosted-domains releases from GitHub API
  ansible.builtin.uri:
    url: https://api.github.com/repos/bootmortis/iran-hosted-domains/releases/latest
    return_content: true
  register: latest_release

- name: Extract download URL of iran.dat
  ansible.builtin.set_fact:
    download_url: "{{ latest_release.content | from_json | json_query('assets[?name==`iran.dat`].browser_download_url') | first }}"

- name: Download iran.dat file and install it on server
  ansible.builtin.get_url:
    url: "{{ download_url }}"
    dest: /usr/local/share/xray/iran.dat
    force: true
    mode: "0644"

- name: Enable bbr
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    sysctl_set: true
  with_items:
    # - { name: net.core.default_qdisc, value: fq }
    - { name: net.ipv4.tcp_congestion_control, value: bbr }

- name: Ensure xray can read certbot directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    recurse: true
  loop:
    - /etc/letsencrypt/archive
    - /etc/letsencrypt/live

- name: Install xray.json config
  ansible.builtin.template:
    src: xray-config.json.j2
    dest: /usr/local/etc/xray/config.json
    owner: root
    group: root
    mode: "0644"
    # validate: xray run -test -c %s
  register: xray_test_result
  # notify:
  #   - restart xray service

- name: Ensure xray service is restarted
  ansible.builtin.systemd:
    name: xray
    state: restarted
    enabled: true
  register: service_result
  failed_when: "'running' not in service_result.status.SubState"
  tags:
    - restart-services

- name: Generate xray subscription from template
  ansible.builtin.template:
    src: subscription.j2
    dest: /tmp/subscription
    mode: "0444"
  register: subscription_template

- name: Read subscription file
  ansible.builtin.slurp:
    src: /tmp/subscription
  register: subscription_file

- name: Install subscription file to webserver directory
  ansible.builtin.copy:
    content: "{{ subscription_file.content }}"
    dest: "{{ nginx_root_dir }}/{{ subscription_filename }}"
    remote_src: true
    force: true
    mode: "0444"
  when: subscription_template.changed

- debug:
    msg: |
      Subscription links:
        https://{{ xray_domains[0] }}/{{ subscription_filename }}
        http://{{ ansible_host }}:2095/{{ subscription_filename }}
