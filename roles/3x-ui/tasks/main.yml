---
- name: Install docker daemon
  ansible.builtin.include_role: geerlingguy.docker

- name: Add A record to Cloudflare
  ansible.builtin.include_role:
    name: cloudflare
  vars:
    records:
      - cloudflare_domain: "{{ xui_domain }}"
        cloudflare_subdomain: "{{ xui_subdomain }}"

- name: Install pip3
  ansible.builtin.include_role:
    name: packages
  vars:
    pkgs_list:
      - python3-pip

- name: Ensure docker and docker-compose python modules are installed
  ansible.builtin.pip:
    name:
      - docker
      - docker-compose

- name: Ensure xui dir exists {{ xui_project_dir }}
  ansible.builtin.file:
    path: "{{ xui_project_dir }}"
    state: directory
    mode: "0755"

- name: Install project files
  ansible.builtin.template:
    src: "{{ item.src }}.j2"
    dest: "{{ xui_project_dir }}/{{ item.src }}"
    owner: root
    group: root
    mode: "{{ item.mode | default('0600') }}"
  loop:
    - src: docker-compose.yaml
    - src: env
    - src: nginx.conf
      mode: "0644"

- name: Copy decoy website to project dir `{{ xui_project_dir }}`
  ansible.builtin.copy:
    src: files/decoy.html
    dest: "{{ xui_project_dir }}/decoy.html"
    mode: "0644"

- name: Ensure x-ui certs directory exists {{ xui_data_dir }}/certs
  ansible.builtin.file:
    path: "{{ xui_data_dir }}/certs"
    state: directory
    mode: "0755"

- name: Generate EC key
  community.crypto.openssl_privatekey:
    path: "{{ xui_certificate_key_path }}"
  register: keygen_result

- name: Create certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ xui_certificate_key_path }}"
    common_name: "{{ xui_fake_domain }}"
    organization_name: Kawabanga, Inc.
    subject_alt_name:
      - "DNS:{{ xui_fake_domain }}"
      - "DNS:www.{{ xui_fake_domain }}"
      - "DNS:api.{{ xui_fake_domain }}"
  register: csr
  when: keygen_result.changed

- name: Create self-signed certificate from CSR
  community.crypto.x509_certificate:
    path: "{{ xui_certificate_path }}"
    csr_content: "{{ csr.csr }}"
    privatekey_path: "{{ xui_certificate_key_path }}"
    provider: selfsigned
  when: keygen_result.changed

# - name: Tear down existing compose services
#   community.docker.docker_compose:
#     project_src: "{{ xui_project_dir }}"
#     state: absent

- name: Create and start compose services
  community.docker.docker_compose:
    project_src: "{{ xui_project_dir }}"
    pull: true

- name: Configure Panel
  ansible.builtin.command: docker compose --project-directory {{ xui_project_dir }} exec xui /app/x-ui setting -username {{ xui_sudo_username }} -password {{ xui_sudo_password }} -port {{ xui_port }} -enabletgbot -tgbotchatid {{ telegram_admin_id }} -tgbottoken {{ telegram_api_token }}

- name: Create and start xui service
  community.docker.docker_compose:
    project_src: "{{ xui_project_dir }}"
    services:
      - xui
    restarted: true

- name: debug panel info
  ansible.builtin.debug:
    msg: |
      Panel URL: https://{{ xui_subdomain }}.{{ xui_domain }}:{{ xui_port }}
      sudo_user: {{ xui_sudo_username }}
      sudo_password: {{ xui_sudo_password }}
