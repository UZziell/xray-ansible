---
- name: Check if WARP has been already activated
  ansible.builtin.uri:
    url: https://ipinfo.io
    timeout: 4
    http_agent: curl
    return_content: true
  register: warp_initial_check
  failed_when: "'cloudflare' not in warp_initial_check.content|lower"
  ignore_errors: true

- name: Install Wireguard
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - wireguard
    - iptables
    # - resolvconf
    - jq
  when: warp_initial_check.failed

- name: Ensure /etc/wireguard directory exists
  ansible.builtin.file:
    path: /etc/wireguard
    state: directory
    mode: "0755"
  when: warp_initial_check.failed

- name: Get latest wgcf release from GitHub API
  ansible.builtin.uri:
    url: https://api.github.com/repos/ViRb3/wgcf/releases/latest
    return_content: true
    timeout: 60
  register: wgcf_latest_release
  when: warp_initial_check.failed
  ignore_errors: true

- name: Extract wgcf download url
  ansible.builtin.set_fact:
    wgcf_download_url: "{{ wgcf_latest_release.content | from_json | json_query(query) | first }}"
  vars:
    query: assets[?contains(name,'linux_amd64')].browser_download_url
  when: warp_initial_check.failed
  ignore_errors: true

- name: Download and install latest wgcf release
  ansible.builtin.get_url:
    url: "{{ wgcf_download_url }}"
    dest: /usr/bin/wgcf
    mode: a+x
    force: true
    timeout: 30
  register: wgcf_download_result
  when: warp_initial_check.failed
  ignore_errors: true

- name: Copy wgcf binary to /usr/bin/wgcf if downloading from github failed
  ansible.builtin.copy:
    src: files/wgcf
    dest: /usr/bin/wgcf
    mode: "0755"
  when: warp_initial_check.failed and (wgcf_latest_release is failed or wgcf_download_result is failed)

- name: Register with WARP
  ansible.builtin.command:
    cmd: /usr/bin/wgcf register --accept-tos
    chdir: /etc/wireguard
    creates: "{{ wgcf_account }}"
  when: warp_initial_check.failed

- name: Generate Wireguard config
  ansible.builtin.command:
    cmd: /usr/bin/wgcf generate
    chdir: /etc/wireguard
    creates: "{{ wgcf_profile }}"
  when: warp_initial_check.failed

- name: Stat Wireguard config {{ wireguard_config }}
  ansible.builtin.stat:
    path: "{{ wireguard_config }}"
  register: wg_config_file
  when: warp_initial_check.failed

- name: Copy generated config to /etc/wireguard
  ansible.builtin.copy:
    src: /etc/wireguard/{{ wgcf_profile }}
    dest: "{{ wireguard_config }}"
    remote_src: true
    mode: "0600"
  when: warp_initial_check.failed and not wg_config_file.stat.exists

- name: Update Wireguard configuration - Set DNS & MTU
  ansible.builtin.lineinfile:
    path: "{{ wireguard_config }}"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  loop:
    - regex: ^DNS
      line: "#DNS = 1.1.1.1"
    - regex: ^MTU
      line: MTU = 1420
  when: warp_initial_check.failed

- name: Update Wireguard configuratoin - Delete defualt AllowedIPs
  ansible.builtin.lineinfile:
    path: "{{ wireguard_config }}"
    state: absent
    regexp: ^AllowedIPs = (0\.0\.0\.0|\:\:\/0)
  when: warp_initial_check.failed

- name: Make sure WARP is not running before fetching IPs
  ansible.builtin.systemd:
    state: stopped
    name: wg-quick@wg0
  when: warp_initial_check.failed

- name: Fetch Google and AWS Cloudfront IPs
  ansible.builtin.shell: |
    set -o pipefail
    GOOGLE_CIDRS=$(curl -s https://www.gstatic.com/ipranges/goog.json | jq -r '.prefixes[]  | {ipv4Prefix,ipv6Prefix} | join("")' | sed ':a;N;$!ba;s/\n/,/g')
    CLOUDFRONT_CIDRS=$(curl -s https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(.service | match("CLOUDFRONT")) | {ip_prefix} | join(",") ' | sed ':a;N;$!ba;s/\n/,/g')
    CLOUDFLARE_CIDRS=$({ curl -s https://www.cloudflare.com/ips-v4;echo; curl -s https://www.cloudflare.com/ips-v6; } | grep -v 162.158.0.0 | sed ':a;N;$!ba;s/\n/,/g')
    AKAMAI_CIDRS=$( curl -s https://raw.githubusercontent.com/SecOps-Institute/Akamai-ASN-and-IPs-List/refs/heads/master/akamai_ip_cidr_blocks.lst | sed ':a;N;$!ba;s/\n/,/g')
    # MICROSOFT_CIDRS=$(curl -s -H "Accept: application/json" "https://endpoints.office.com/endpoints/Worldwide?ClientRequestId=b10c5ed1-bad1-445f-b386-b919946339a7" | jq -r '.[] | select(.urls and .ips) | .urls[], .ips[]' | grep -vE '[a-z]' | sort -h |sed ':a;N;$!ba;s/\n/,/g')
    cat <<-EOF
    PersistentKeepalive = 5

    # Google
    AllowedIPS = ${GOOGLE_CIDRS}

    # AWS CloudFront
    AllowedIPS = ${CLOUDFRONT_CIDRS}

    # CLOUDFLARE
    AllowedIPS = ${CLOUDFLARE_CIDRS}

    # AKAMAI
    AllowedIPS = ${AKAMAI_CIDRS}
    
    # Telegram
    AllowedIPS = 91.108.20.0/23,91.108.20.0/22,91.108.12.0/22,149.154.172.0/22,149.154.168.0/22,91.108.56.0/23,91.108.16.0/22,149.154.160.0/22,149.154.162.0/23,91.108.4.0/22,91.108.8.0/22,95.161.64.0/20,149.154.164.0/22,149.154.164.0/23,91.108.56.0/22,149.154.166.0/23,149.154.160.0/23,185.76.151.0/24,91.105.192.0/23,2001:b28:f23c::/48,2001:b28:f23d::/48,2001:b28:f23f::/48,2001:67c:4e8::/48,2a0a:f280:203::/48

    # Meta
    AllowedIPS = 102.132.100.0/24,102.132.101.0/24,102.132.103.0/24,102.132.104.0/24,102.132.96.0/20,102.132.96.0/24,102.132.97.0/24,102.132.99.0/24,103.4.96.0/22,129.134.0.0/17,129.134.25.0/24,129.134.26.0/24,129.134.27.0/24,129.134.28.0/24,129.134.29.0/24,129.134.30.0/23,129.134.30.0/24,129.134.31.0/24,157.240.0.0/17,157.240.0.0/24,157.240.1.0/24,157.240.11.0/24,157.240.12.0/24,157.240.13.0/24,157.240.14.0/24,157.240.15.0/24,157.240.16.0/24,157.240.17.0/24,157.240.19.0/24,157.240.192.0/18,157.240.192.0/24,157.240.195.0/24,157.240.196.0/24,157.240.197.0/24,157.240.198.0/24,157.240.199.0/24,157.240.200.0/24,157.240.201.0/24,157.240.202.0/24,157.240.203.0/24,157.240.204.0/24,157.240.205.0/24,157.240.207.0/24,157.240.208.0/24,157.240.209.0/24,157.240.210.0/24,157.240.211.0/24,157.240.212.0/24,157.240.214.0/24,157.240.215.0/24,157.240.216.0/24,157.240.217.0/24,157.240.218.0/24,157.240.22.0/24,157.240.221.0/24,157.240.222.0/24,157.240.223.0/24,157.240.224.0/24,157.240.225.0/24,157.240.226.0/24,157.240.227.0/24,157.240.229.0/24,157.240.23.0/24,157.240.231.0/24,157.240.233.0/24,157.240.234.0/24,157.240.235.0/24,157.240.236.0/24,157.240.237.0/24,157.240.238.0/24,157.240.239.0/24,157.240.24.0/24,157.240.241.0/24,157.240.242.0/24,157.240.243.0/24,157.240.244.0/24,157.240.245.0/24,157.240.247.0/24,157.240.249.0/24,157.240.25.0/24,157.240.251.0/24,157.240.252.0/24,157.240.253.0/24,157.240.254.0/24,157.240.26.0/24,157.240.27.0/24,157.240.28.0/24,157.240.29.0/24,157.240.30.0/24,157.240.3.0/24,157.240.31.0/24,157.240.5.0/24,157.240.6.0/24,157.240.7.0/24,157.240.8.0/24,157.240.9.0/24,163.70.128.0/17,163.70.128.0/24,163.70.129.0/24,163.70.130.0/24,2620:0:1c00::/40,2a03:2880:1000::/36,2a03:2880:2000::/36,2a03:2880:3000::/36,2a03:2880::/32,2a03:2880::/36,2a03:2880:f001::/48,2a03:2880:f003::/48,2a03:2880:f004::/48,2a03:2880:f005::/48,2a03:2880:f007::/48,2a03:2880:f008::/48,2a03:2880:f00a::/48,2a03:2880:f00c::/48,2a03:2880:f00d::/48,2a03:2880:f00e::/48,2a03:2880:f00f::/48,2a03:2880:f010::/48,2a03:2880:f011::/48,2a03:2880:f012::/48,2a03:2880:f013::/48,2a03:2880:f016::/48,2a03:2880:f017::/48,2a03:2880:f019::/48,2a03:2880:f01c::/48,2a03:2880:f01d::/48,2a03:2880:f021::/48,2a03:2880:f023::/48,2a03:2880:f024::/48,2a03:2880:f028::/48,2a03:2880:f02b::/48,2a03:2880:f02c::/48,2a03:2880:f02f::/48,2a03:2880:f031::/48,2a03:2880:f032::/48,2a03:2880:f034::/48,2a03:2880:f035::/48,2a03:2880:f036::/48,2a03:2880:f037::/48,2a03:2880:f038::/48,2a03:2880:f03a::/48,2a03:2880:f03d::/48,2a03:2880:f03e::/48,2a03:2880:f03f::/48,2a03:2880:f041::/48,2a03:2880:f042::/48,2a03:2880:f043::/48,2a03:2880:f044::/48,2a03:2880:f045::/48,2a03:2880:f047::/48,2a03:2880:f048::/48,2a03:2880:f04a::/48,2a03:2880:f04c::/48,2a03:2880:f04d::/48,2a03:2880:f04e::/48,2a03:2880:f050::/48,2a03:2880:f052::/48,2a03:2880:f053::/48,2a03:2880:f056::/48,2a03:2880:f057::/48,2a03:2880:f058::/48,2a03:2880:f059::/48,2a03:2880:f05a::/48,2a03:2880:f05b::/48,2a03:2880:f05c::/48,2a03:2880:f05e::/48,2a03:2880:f060::/48,2a03:2880:f061::/48,2a03:2880:f065::/48,2a03:2880:f066::/48,2a03:2880:f068::/48,2a03:2880:f06a::/48,2a03:2880:f06b::/48,2a03:2880:f06f::/48,2a03:2880:f070::/48,2a03:2880:f071::/48,2a03:2880:f074::/48,2a03:2880:f076::/48,2a03:2880:f077::/48,2a03:2880:f078::/48,2a03:2880:f07d::/48,2a03:2880:f07e::/48,2a03:2880:f080::/48,2a03:2880:f082::/48,2a03:2880:f083::/48,2a03:2880:f084::/48,2a03:2880:f085::/48,2a03:2880:f086::/48,2a03:2880:f08a::/48,2a03:2880:f08e::/48,2a03:2880:f091::/48,2a03:2880:f096::/48,2a03:2880:f097::/48,2a03:2880:f098::/48,2a03:2880:f099::/48,2a03:2880:f09d::/48,2a03:2880:f09e::/48,2a03:2880:f0a2::/48,2a03:2880:f0a3::/48,2a03:2880:f0a4::/48

    # Microsoft
    AllowedIPS = 1.186.0.0/16,4.128.0.0/12,4.144.0.0/12,4.160.0.0/12,4.176.0.0/12,4.192.0.0/12,4.208.0.0/12,4.224.0.0/12,4.240.0.0/12,9.129.0.0/16,9.130.0.0/16,9.131.0.0/16,9.132.0.0/16,9.133.0.0/16,9.135.0.0/16,9.136.0.0/16,9.141.0.0/16,9.145.0.0/16,9.146.0.0/16,9.149.0.0/16,9.160.0.0/16,9.163.0.0/16,9.164.0.0/16,9.166.0.0/16,9.167.0.0/16,9.169.0.0/16,9.177.0.0/16,9.185.0.0/16,9.205.0.0/16,9.220.0.0/16,9.223.0.0/16,9.228.0.0/16,9.229.0.0/16,9.231.0.0/16,9.234.0.0/15,9.248.0.0/16,13.64.0.0/11,13.96.0.0/13,13.104.0.0/14,13.117.0.0/16,13.118.0.0/15,13.123.0.0/16,13.240.0.0/16,13.241.0.0/16,13.242.0.0/15,20.0.0.0/11,20.33.0.0/16,20.34.0.0/15,20.36.0.0/14,20.40.0.0/13,20.48.0.0/12,20.64.0.0/10,20.128.0.0/16,20.130.0.0/16,20.135.0.0/16,20.136.0.0/16,20.140.0.0/15,20.143.0.0/16,20.144.0.0/14,20.150.0.0/15,20.152.0.0/16,20.153.0.0/16,20.157.0.0/16,20.158.0.0/15,20.160.0.0/12,20.176.0.0/14,20.180.0.0/14,20.184.0.0/13,20.192.0.0/10,23.96.0.0/13,40.17.0.0/16,40.21.0.0/16,40.25.0.0/16,40.33.0.0/16,40.34.0.0/16,40.47.0.0/16,40.64.0.0/10,40.146.0.0/16,40.148.0.0/16,40.155.0.0/16,40.159.0.0/16,40.162.0.0/16,40.169.0.0/16,40.170.0.0/16,40.171.0.0/16,40.212.0.0/16,40.218.0.0/16,40.249.0.0/16,40.253.0.0/16,42.159.0.0/16,42.159.128.3/32,42.159.128.4/32,48.192.0.0/12,48.208.0.0/13,48.216.0.0/14,48.220.0.0/15,48.222.0.0/15,48.224.0.0/11,50.20.0.0/18,50.20.64.0/19,50.20.128.0/18,50.21.32.0/19,50.85.0.0/16,51.1.0.0/16,51.4.0.0/15,51.8.0.0/16,51.10.0.0/15,51.12.0.0/15,51.18.0.0/16,51.42.0.0/16,51.51.0.0/16,51.53.0.0/16,51.54.0.0/15,51.56.0.0/14,51.103.0.0/16,51.104.0.0/15,51.107.0.0/16,51.109.0.0/16,51.111.0.0/16,51.116.0.0/16,51.120.0.0/16,51.124.0.0/16,51.126.0.0/16,51.132.0.0/16,51.136.0.0/15,51.138.0.0/16,51.140.0.0/14,51.144.0.0/15,52.96.0.0/12,52.112.0.0/14,52.120.0.0/14,52.125.0.0/16,52.126.0.0/15,52.130.0.0/15,52.132.0.0/14,52.136.0.0/13,52.145.0.0/16,52.146.0.0/15,52.148.0.0/14,52.152.0.0/13,52.160.0.0/11,52.224.0.0/11,54.15.0.0/16,54.18.0.0/16,54.27.0.0/16,54.29.0.0/16,54.104.0.0/16,54.119.0.0/16,54.133.0.0/16,54.135.0.0/16,54.139.0.0/16,57.150.0.0/15,57.152.0.0/14,57.156.0.0/14,57.160.0.0/12,62.10.0.0/15,64.4.0.0/18,64.207.0.0/18,64.236.0.0/16,64.238.96.0/19,65.52.0.0/14,66.119.144.0/20,66.180.96.0/19,68.18.0.0/15,68.154.0.0/15,68.210.0.0/15,68.218.0.0/15,68.220.0.0/15,69.15.0.0/16,69.198.0.0/15,70.37.0.0/17,70.37.128.0/18,70.152.0.0/15,70.156.0.0/15,72.16.128.0/17,72.54.0.0/16,72.144.0.0/14,72.152.0.0/14,74.7.0.0/16,74.144.0.0/12,74.160.0.0/14,74.176.0.0/14,74.224.0.0/14,74.234.0.0/15,74.240.0.0/14,74.248.0.0/15,82.87.0.0/16,82.171.0.0/16,84.81.0.0/16,84.222.0.0/16,84.223.0.0/16,85.210.0.0/15,85.212.0.0/16,86.91.0.0/16,91.190.216.0/21,94.245.64.0/18,98.64.0.0/14,98.70.0.0/15,102.37.0.0/16,102.133.0.0/16,103.9.8.0/22,103.25.156.0/24,103.25.157.0/24,103.25.158.0/23,103.36.96.0/22,103.255.140.0/22,104.40.0.0/13,104.146.0.0/15,104.208.0.0/13,108.140.0.0/14,109.246.0.0/16,111.221.16.0/20,111.221.64.0/18,122.149.0.0/16,124.252.0.0/16,128.24.0.0/16,128.85.0.0/16,128.94.0.0/16,128.203.0.0/16,128.251.0.0/16,129.75.0.0/16,129.135.0.0/16,130.33.0.0/16,130.107.0.0/16,130.131.0.0/16,130.213.0.0/16,131.107.0.0/16,131.145.0.0/16,131.163.0.0/16,131.189.0.0/16,131.253.1.0/24,131.253.3.0/24,131.253.5.0/24,131.253.6.0/24,131.253.8.0/24,131.253.12.0/22,131.253.16.0/23,131.253.18.0/24,131.253.21.0/24,131.253.22.0/23,131.253.24.0/21,131.253.32.0/20,131.253.61.0/24,131.253.62.0/23,131.253.64.0/18,131.253.128.0/17,132.164.0.0/16,132.196.0.0/16,132.220.0.0/16,132.245.0.0/16,134.33.0.0/16,134.112.0.0/16,134.138.0.0/16,134.149.0.0/16,134.170.0.0/16,134.177.0.0/16,135.3.0.0/16,135.4.0.0/16,135.5.0.0/16,135.6.0.0/16,135.7.0.0/16,135.13.0.0/16,135.18.0.0/16,135.85.0.0/16,135.86.0.0/16,135.88.0.0/16,135.93.0.0/16,135.111.0.0/16,135.112.0.0/16,135.114.0.0/16,135.115.0.0/16,135.116.0.0/16,135.117.0.0/16,135.118.0.0/16,135.119.0.0/16,135.120.0.0/16,135.130.0.0/16,135.149.0.0/16,135.171.0.0/16,135.183.0.0/16,135.185.0.0/16,135.220.0.0/16,135.221.0.0/16,135.222.0.0/16,135.224.0.0/15,135.226.0.0/16,135.227.0.0/16,135.228.0.0/16,135.229.0.0/16,135.230.0.0/16,135.231.0.0/16,135.232.0.0/14,135.236.0.0/15,135.239.0.0/16,135.240.0.0/16,135.241.0.0/16,135.243.0.0/16,135.244.0.0/16,135.246.0.0/16,135.247.0.0/16,135.248.0.0/16,135.253.0.0/16,135.254.0.0/16,135.255.0.0/16,137.116.0.0/15,137.135.0.0/16,137.162.0.0/16,138.91.0.0/16,138.105.0.0/16,138.196.0.0/16,138.203.0.0/16,138.213.0.0/16,138.239.0.0/16,138.242.0.0/16,139.188.0.0/16,139.217.0.0/16,139.219.0.0/16,141.251.0.0/16,143.64.0.0/16,143.209.0.0/16,143.226.0.0/16,143.241.0.0/16,145.129.0.0/16,145.130.0.0/16,145.132.0.0/15,145.176.0.0/13,145.184.0.0/14,145.188.0.0/15,145.190.0.0/15,146.147.0.0/16,147.145.0.0/16,147.214.0.0/16,147.243.0.0/16,148.7.0.0/16,148.53.0.0/16,149.1.0.0/16,149.175.0.0/16,149.198.0.0/16,149.204.0.0/16,150.171.0.0/16,150.206.0.0/16,150.212.0.0/16,150.242.48.0/22,151.98.0.0/16,151.129.0.0/16,151.206.0.0/16,152.138.0.0/16,155.62.0.0/16,156.23.0.0/16,157.31.0.0/16,157.54.0.0/15,157.56.0.0/14,157.60.0.0/16,157.81.0.0/16,157.95.0.0/16,157.172.0.0/16,157.176.0.0/16,157.252.0.0/16,158.23.0.0/16,158.24.0.0/16,158.53.0.0/16,158.158.0.0/16,159.27.0.0/16,159.128.0.0/16,160.4.0.0/16,160.207.0.0/16,160.234.0.0/16,161.66.0.0/16,161.157.0.0/16,161.220.0.0/16,163.57.0.0/16,163.228.0.0/16,165.15.0.0/16,165.17.0.0/16,167.105.0.0/16,167.162.0.0/16,167.186.0.0/16,167.220.0.0/16,167.231.0.0/16,168.61.0.0/16,168.62.0.0/15,169.138.0.0/16,170.165.0.0/16,172.128.0.0/11,172.160.0.0/11,172.192.0.0/13,172.200.0.0/13,172.208.0.0/13,173.200.0.0/16,191.232.0.0/13,192.32.0.0/16,192.48.225.0/24,192.84.159.0/24,192.84.160.0/23,192.146.133.0/24,192.153.251.0/24,192.197.157.0/24,192.237.67.0/24,193.149.64.0/19,193.221.113.0/24,194.69.96.0/19,194.110.197.0/24,194.238.128.0/17,195.134.224.0/19,198.105.232.0/22,198.137.97.0/24,198.200.130.0/24,198.206.164.0/24,199.30.16.0/20,199.50.0.0/16,199.60.28.0/24,199.74.210.0/24,199.103.90.0/23,199.103.122.0/24,199.118.0.0/16,199.242.32.0/20,199.242.48.0/21,202.89.224.0/20,204.13.120.0/21,204.14.180.0/22,204.79.135.0/24,204.79.179.0/24,204.79.181.0/24,204.79.188.0/24,204.79.195.0/24,204.79.196.0/23,204.79.252.0/24,204.152.18.0/23,204.152.140.0/23,204.231.192.0/24,204.231.194.0/23,204.231.197.0/24,204.231.198.0/23,204.231.200.0/21,204.231.208.0/20,204.231.236.0/24,205.174.224.0/20,206.138.168.0/21,206.191.224.0/19,207.46.0.0/16,207.68.128.0/18,207.103.0.0/16,208.68.136.0/21,208.76.44.0/22,208.84.0.0/21,209.199.0.0/16,209.240.192.0/19,212.132.0.0/19,212.173.0.0/17,212.207.0.0/16,213.54.0.0/16,213.199.128.0/18,216.32.180.0/22,216.220.208.0/20,217.176.0.0/16,217.177.96.0/19,2001:67c:1020::/48,2001:df0:7::/48,2001:df0:d7::/48,2001:df0:d8::/48,2001:df0:d9::/48,2001:4898::/32,2001:489a:2000::/35,2404:f801::/32,2602:fd5e::/36,2603:1000::/24,2620:0:30::/45,2620:1ec::/36,2801:80:1d0::/48,2a01:110::/32,2a01:111::/32,2a01:4180::/32

    EOF

  args:
    executable: /bin/bash
  register: allowedips
  when: warp_initial_check.failed

- name: Update Wireguard configuration - Add Google and AWS Cloudfront AllowedIPS
  ansible.builtin.blockinfile:
    path: "{{ wireguard_config }}"
    block: "{{ allowedips.stdout }}"
  when: warp_initial_check.failed

- name: Start and Enable WARP (IPv4-IPv6)
  ansible.builtin.systemd:
    name: wg-quick@wg0
    state: restarted
    enabled: true
  when: warp_initial_check.failed

- name: Ensure WARP has been activated successfully (IPv4-IPv6)
  ansible.builtin.uri:
    url: https://ipinfo.io
    timeout: 4
    http_agent: curl
    return_content: true
  register: ipinfo_ipv4ipv6_result
  # failed_when: true
  failed_when: "'cloudflare' not in ipinfo_ipv4ipv6_result.content|lower"
  ignore_errors: true
  when: warp_initial_check.failed

- name: Update Wireguard configuratoin (IPv4-only)
  ansible.builtin.lineinfile:
    path: "{{ wireguard_config }}"
    state: absent
    regexp: ^Address = .*\/128$
  when: warp_initial_check.failed and ipinfo_ipv4ipv6_result.failed

- name: Update Wireguard configuratoin - Delete IPv6 AllowdIPS (IPv4-only)
  ansible.builtin.replace:
    path: "{{ wireguard_config }}"
    regexp: ',([a-fA-F0-9]{0,4}:){1,7}([a-fA-F0-9]{1,4})?\/[0-9]{1,3}'
    replace: ""
  when: warp_initial_check.failed and ipinfo_ipv4ipv6_result.failed

- name: Start and Enable WARP (IPv4-only)
  ansible.builtin.systemd:
    name: wg-quick@wg0
    state: restarted
    enabled: true
  when: warp_initial_check.failed and ipinfo_ipv4ipv6_result.failed

- name: Ensure WARP has been activated successfully (IPv4-only)
  ansible.builtin.uri:
    url: https://ipinfo.io
    timeout: 4
    http_agent: curl
    return_content: true
  register: ipinfo_ipv4_result
  failed_when: "'cloudflare' not in ipinfo_ipv4_result.content|lower"
  ignore_errors: true
  when: warp_initial_check.failed and ipinfo_ipv4ipv6_result.failed

- name: Stop and Disable WARP if both IPv4-only and IPv4-IPv6 checks failed
  ansible.builtin.systemd:
    state: stopped
    name: wg-quick@wg0
    enabled: false
  when: warp_initial_check.failed and ipinfo_ipv4ipv6_result.failed and ipinfo_ipv4_result.failed
